library(data.table)
library(forecast)
library(parallel)
library(ggplot2)
library(maptools)
library(rgdal)
library(geosphere)
library(rgeos)
library(sf)
Sys.setlocale(category = "LC_ALL", locale = "cht")
##變項名
nam <- c("County", "Sex", "Total", "c0", "c1to4", "c1", "c2", "c3", "c4", "c5to9", 
"c10to14", "c15to19", "c20to24", "c25to29", "c30to34", "c35to39", "c40to44", "c45to49", 
"c50to54", "c55to59", "c60to64", "c65to69", "c70to74", "c75to79", "c80to84", "c85to89", 
"c90to94", "c95to99", "c100")
##以105年的縣市作為縣市List
pop <- openxlsx::read.xlsx("C:/Data/paper/data/COUNTY.xlsx", sheet = "105", startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop <- pop[Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
county_list <- pop[, c(1:2)]
county_list <- county_list[!grepl("新竹市|嘉義市|高雄縣|臺中縣|臺南縣", County), ]
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) county_list[grepl(i, County), ]$County <- substr(county_list[grepl(i, County), ]$County, 1, 2)
##
###讀取資料function
readPop <- function(x){
pop <- openxlsx::read.xlsx("C:/Data/paper/data/COUNTY.xlsx", sheet = as.character(x), startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop$County <- gsub("\\s", "", pop$County)
pop <- pop[, lapply(.SD, as.numeric), by = .(County, Sex)]
pop <- pop[, c(1:2, 4:5, 10:29)][Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
pop[, `:=`(c0to4 = c0+c1to4, c85 = c85to89 + c90to94 + c95to99 + c100, County = ifelse(grepl("臺北縣", County), "新北市", ifelse(grepl("桃園縣", County), "桃園市", County)))]
pop <- pop[, c(1:2, 25, 5:20, 26)]

nl <- c("臺中", "臺南", "高雄")
nl2 <- c("新竹", "嘉義")
for (i in nl){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
if (x >= 71){
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
}else{
pop <- pop[!grepl("新竹市|嘉義市", County), ]
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
}
}

pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
return(pop)
}

##計算現有的CCR，使用63-95年資料
calculateCCRTotal <- function(from, to){
CCR_total <- data.table()
for(k in from:to){
pop <- readPop(k)
setDF(pop)

pop2 <- readPop(k+5)
setDF(pop2)

CCR <- data.table(County = pop$County, Sex = pop$Sex)
for(i in 3:18){
ccr <- pop2[, c(i+1)]/pop[, c(i)]
CCR <- cbind(CCR, ccr)
names(CCR)[i] <- names(pop)[i]
}
CCR$c80 <- pop2[, c(20)]/(pop[, c(19)]+pop[, c(20)])
fer <- pop2
setDT(fer)
fer <- fer[Sex == "女", ]
fer <- fer[, .(FP = sum(c15to19, c20to24, c25to29, c30to34, c35to39, c40to44)), by = .(County)]
CCR$CWR <- pop2[, c(3)]/rep(fer$FP, each = 2)
CCR$year <- rep(k, nrow(CCR))
CCR_total <- rbind(CCR_total, CCR)
}
return(CCR_total)
}

CCR_total <- calculateCCRTotal(63, 92)


dd <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]
dd <- melt(data = dd, id = c("year", "Sex"))
dd <- dd[Sex == "女", ]

lab <- tapply(dd$value, dd$variable, last)
p1 <- ggplot() + geom_line(data = dd, aes(x = year, y = value,
 group = variable, color = variable)) + 
 geom_text(aes(x = 93, y = lab, label = names(lab))) + theme_minimal()

png("C:/Data/paper/data/result/TimeSeriesOfCCR_Female.png", width = 720, height = 720)
p1
dev.off()

dd <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]
dd <- melt(data = dd, id = c("year", "Sex"))
dd <- dd[Sex == "男", ]

lab <- tapply(dd$value, dd$variable, last)
p2 <- ggplot() + geom_line(data = dd, aes(x = year, y = value,
 group = variable, color = variable)) + 
 geom_text(aes(x = 93, y = lab, label = names(lab))) + theme_minimal()

png("C:/Data/paper/data/result/TimeSeriesOfCCR_Male.png", width = 720, height = 720)
p2
dev.off()

CCR_year_sex <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]

pop6392 <- data.table()
for (i in 63:92){
  df <- readPop(i)
  df$year <- rep(i, nrow(df))
  pop6392 <- rbind(pop6392, df)
}
pop6392_1 <- pop6392[, 2:21][, lapply(.SD, sum), by = .(year, Sex)]
pop6392_1$c80to84 <- pop6392_1$c80to84 + pop6392_1$c85
pop6392_1$c85 <- NULL
pop6392_1$CWR <- rowSums(pop6392_1[, 6:11])
pop6392_2 <- data.table()
for (i in 63:92){
  df <- county_list
  df$year <- rep(i, nrow(df))
  pop6392_2 <- rbind(pop6392_2, df)
}
pop6392_4 <- pop6392_1
pop6392_1 <- dplyr::left_join(x = pop6392_2, y = pop6392_1, by = c("year", "Sex"))
setDT(pop6392_1)
pop6392_2 <- pop6392
pop6392_2$c80to84 <- pop6392_2$c80to84 + pop6392_2$c85
pop6392_2$c85 <- NULL
pop6392_2$CWR <- rowSums(pop6392_2[, 6:11])
pop6392_2$year <- NULL
pop6392_3 <- pop6392_2[, 3:20]/pop6392_1[, 4:21]

CCR_year_sex <- cbind(CCR_total[, c(2, 21)], CCR_total[, 3:20]*pop6392_3)
CCR_year_sex <- CCR_year_sex[, lapply(.SD, sum), by = .(year, Sex)]


kk <- cbind(pop6392_4[, 3:6]/rowSums(pop6392_4[, 3:6]), 
                pop6392_4[, 7:14]/rowSums(pop6392_4[, 7:14]), 
                pop6392_4[, 15:17]/rowSums(pop6392_4[, 15:17]), 
                pop6392_4[, 18:19]/rowSums(pop6392_4[, 18:19]))

CCR_year_sex <- cbind(CCR_year_sex[, 1:2], CCR_year_sex[, 3:19]*kk, CCR_year_sex[, c(20)])


CCR_year_sex$Young <- rowSums(CCR_year_sex[, 3:6])
CCR_year_sex$Adult <- rowSums(CCR_year_sex[, 7:14])
CCR_year_sex$Old <- rowSums(CCR_year_sex[, 15:17])
CCR_year_sex$eOld <- rowSums(CCR_year_sex[, 18:19])
CCR_year_sex <- CCR_year_sex[, c(1:2, 20:24)]

####predict CCR
predCCR <- data.table()
sexlist <- unique(county_list$Sex)
counlist <- unique(county_list$County)
for(y in 1:length(sexlist)){
sam <- CCR_year_sex[Sex == sexlist[y], ]
setDF(sam)
pretime <- data.table(Sex = rep(sam$Sex[1], 10))
for(k in 3:7){
model <- auto.arima(sam[, c(k)])
res <- as.numeric(forecast(model,10)$mean)
pretime <- cbind(pretime, res)
names(pretime)[k-1] <- names(sam)[k]
}
pretime$year <- 93:102
predCCR <- rbind(predCCR, pretime)
}
write.csv(predCCR, "C:/Data/paper/data/result/CCR.csv", row.names = FALSE)
##apply預測的CCR
#先用現有的人口資料預測（原本就有用到91-95年的資料）
forePop <- data.table()
for(y in 93:97){
pop <- readPop(y)
pop$Sex <- NULL
pop$County <- NULL
setDF(pop)
pop1 <- pop[, c(1:16)]

CCR <- predCCR[year == y, ]
CCR$year <- NULL
CCR$Sex <- NULL
setDF(CCR)
kk <- list()
for (i in 1:20) kk[[i]] <- CCR
CCR1 <- rbindlist(kk)

predPop <- cbind(pop1[, 1:4]*CCR1$Young, pop1[, 5:12]*CCR1$Adult, 
pop1[, 13:15]*CCR1$Old, data.frame(c75to79 = pop1[, 16]*CCR1$eOld))
predPop <- round(predPop, 0)
names(predPop) <- names(pop)[2:17]
predPop$c85 <- round(CCR$eOld*(pop$c80to84+pop$c85), 0)
predPop <- cbind(county_list, predPop)
setDT(predPop)
fer <- predPop[Sex == "女", ]
fer <- fer[, .(FP = sum(c15to19, c20to24, c25to29, c30to34, c35to39, c40to44)), by = .(County)]
predPop$c0to4 <- round(CCR$CWR*(rep(fer$FP, each = 2)), 0)
predPop <- predPop[, c(1:2, 20, 3:19)]
predPop$year <- rep(y+5, nrow(predPop))
forePop <- rbind(forePop, predPop)
}

#再用預測的98-102年人口預測103-107年人口
for(y in 98:102){
pop <- forePop[year == y, ]
pop$Sex <- NULL
pop$County <- NULL
setDF(pop)
pop1 <- pop[, c(1:16)]

CCR <- predCCR[year == y, ]
CCR$year <- NULL
CCR$Sex <- NULL
setDF(CCR)
kk <- list()
for (i in 1:20) kk[[i]] <- CCR
CCR1 <- rbindlist(kk)

predPop <- cbind(pop1[, 1:4]*CCR1$Young, pop1[, 5:12]*CCR1$Adult, 
pop1[, 13:15]*CCR1$Old, data.frame(c75to79 = pop1[, 16]*CCR1$eOld))
predPop <- round(predPop, 0)
names(predPop) <- names(pop)[2:17]
predPop$c85 <- round(CCR$eOld*(pop$c80to84+pop$c85), 0)
predPop <- cbind(county_list, predPop)
setDT(predPop)
fer <- predPop[Sex == "女", ]
fer <- fer[, .(FP = sum(c15to19, c20to24, c25to29, c30to34, c35to39, c40to44)), by = .(County)]
predPop$c0to4 <- round(CCR$CWR*(rep(fer$FP, each = 2)), 0)
predPop <- predPop[, c(1:2, 20, 3:19)]
predPop$year <- rep(y+5, nrow(predPop))
forePop <- rbind(forePop, predPop)
}

####IPF控制及評估模型
actPop <- data.table()
for(i in 98:107){
pop <- readPop(i)
pop$year <- rep(i, nrow(pop))
actPop <- rbind(actPop, pop)
}


cl <- makeCluster(7)#7核同時計算
clusterExport(cl, "forePop")#把town輸入進去平行計算
clusterExport(cl, "actPop")
clusterExport(cl, "sexlist")
clusterExport(cl, "county_list")
clusterEvalQ(cl, library(data.table))


finalipf <- rbindlist(parLapply(cl,X= 98:102, function(i) {
MFipf <- data.table()
for(x in 1:length(sexlist)){
foreipf <- forePop[year == i&grepl(sexlist[x], Sex), ]
foreipf$year <- NULL
foreipf1 <- foreipf[, c(3:20)]
row_sum <- rowSums(foreipf1)

actipf <- actPop[year == i&grepl(sexlist[x], Sex), ]
col_sum <- colSums(actipf[, c(3:20)])

fcsum <- foreipf1
fcsum <- t(t(fcsum)/colSums(fcsum))
fcsum <- t(t(fcsum)*col_sum)
fcsum <- fcsum/rowSums(fcsum)
fcsum <- fcsum*row_sum
fi <- fcsum
o <- 1
repeat{
o <- o + 1
fcsum <- t(t(fcsum)/colSums(fcsum))
fcsum <- t(t(fcsum)*col_sum)
fcsum <- fcsum/rowSums(fcsum)
fcsum <- fcsum*row_sum
if(paste(round(colSums(fcsum), 0), collapse = ",")==paste(round(colSums(fi), 0), collapse = ",")&paste(round(rowSums(fcsum), 0), collapse = ",")==paste(round(rowSums(fi), 0), collapse = ",")){
fcsum <- round(fcsum, 0)
break
}else if(o > 50000){
fcsum <- round(fcsum, 0)
break
}
fi <- fcsum
}
foreipf <- cbind(foreipf[, c(1:2)], fcsum)
MFipf <- rbind(MFipf, foreipf)
}
MFipf <- dplyr::left_join(x = county_list, y = MFipf, by = c("County", "Sex"))
MFipf$year <- i
return(MFipf)
}))
stopCluster(cl)


########第二次IPF
CCT <- data.table()
for(y in 98:102){
pop <- finalipf[year == y, ]
pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
pop$Sex <- NULL
pop$County <- NULL
setDF(pop)
pop1 <- pop[, c(1:16)]

CCR <- predCCR[year == y, ]
CCR$year <- NULL
CCR$Sex <- NULL
setDF(CCR)
kk <- list()
for (i in 1:20) kk[[i]] <- CCR
CCR1 <- rbindlist(kk)

predPop <- cbind(pop1[, 1:4]*CCR1$Young, pop1[, 5:12]*CCR1$Adult, 
pop1[, 13:15]*CCR1$Old, data.frame(c75to79 = pop1[, 16]*CCR1$eOld))
predPop <- round(predPop, 0)
names(predPop) <- names(pop)[2:17]
predPop$c85 <- round(CCR$eOld*(pop$c80to84+pop$c85), 0)
predPop <- cbind(county_list, predPop)
setDT(predPop)
fer <- predPop[Sex == "女", ]
fer <- fer[, .(FP = sum(c15to19, c20to24, c25to29, c30to34, c35to39, c40to44)), by = .(County)]
predPop$c0to4 <- round(CCR$CWR*(rep(fer$FP, each = 2)), 0)
predPop <- predPop[, c(1:2, 20, 3:19)]
predPop$year <- rep(y+5, nrow(predPop))
CCT <- rbind(CCT, predPop)
}
forePop <- rbind(forePop[year %in% c(98:102), ], CCT)

cl <- makeCluster(7)#7核同時計算
clusterExport(cl, "forePop")#把town輸入進去平行計算
clusterExport(cl, "actPop")
clusterExport(cl, "sexlist")
clusterExport(cl, "county_list")
clusterEvalQ(cl, library(data.table))

finalipf2 <- rbindlist(parLapply(cl,X= 103:107, function(i) {
MFipf <- data.table()
for(x in 1:length(sexlist)){
foreipf <- forePop[year == i&grepl(sexlist[x], Sex), ]
foreipf$year <- NULL
foreipf1 <- foreipf[, c(3:20)]
row_sum <- rowSums(foreipf1)

actipf <- actPop[year == i&grepl(sexlist[x], Sex), ]
col_sum <- colSums(actipf[, c(3:20)])

fcsum <- foreipf1
fcsum <- t(t(fcsum)/colSums(fcsum))
fcsum <- t(t(fcsum)*col_sum)
fcsum <- fcsum/rowSums(fcsum)
fcsum <- fcsum*row_sum
fi <- fcsum
o <- 1
repeat{
o <- o + 1
fcsum <- t(t(fcsum)/colSums(fcsum))
fcsum <- t(t(fcsum)*col_sum)
fcsum <- fcsum/rowSums(fcsum)
fcsum <- fcsum*row_sum
if(paste(round(colSums(fcsum), 0), collapse = ",")==paste(round(colSums(fi), 0), collapse = ",")&paste(round(rowSums(fcsum), 0), collapse = ",")==paste(round(rowSums(fi), 0), collapse = ",")){
fcsum <- round(fcsum, 0)
break
}else if(o > 50000){
fcsum <- round(fcsum, 0)
break
}
fi <- fcsum
}
foreipf <- cbind(foreipf[, c(1:2)], fcsum)
MFipf <- rbind(MFipf, foreipf)
}
MFipf <- dplyr::left_join(x = county_list, y = MFipf, by = c("County", "Sex"))
MFipf$year <- i
return(MFipf)
}))
stopCluster(cl)


finalipf <- rbind(finalipf, finalipf2)




##########
simpleMAPE <- function(x, y){
forePop1 <- x[, c(3:20)]
actPop1 <- y[, c(3:20)]
MAPE <- sum(abs((forePop1-actPop1)/actPop1))/(ncol(actPop1)*nrow(actPop1))*100
return(MAPE)
}
simpleMAPE(forePop, actPop)
simpleMAPE(finalipf, actPop)
simpleMAPE(finalipf[year %in% c(98:102), ], actPop[year %in% c(98:102), ])

simpleMALPE <- function(x, y){
forePop1 <- x[, c(3:20)]
actPop1 <- y[, c(3:20)]
MAPE <- sum(((forePop1-actPop1)/actPop1))/(ncol(actPop1)*nrow(actPop1))*100
return(MAPE)
}
simpleMALPE(forePop, actPop)
simpleMALPE(finalipf, actPop)

calculateMAPE <- function(x, y){
counMAPE <- data.table(County = counlist, MAPE = NA)
for(i in 1:length(counlist)){
forePop1 <- x[grepl(counlist[i], County), ]
actPop1 <- y[grepl(counlist[i], County), ]
forePop1 <- forePop1[, c(3:20)]
actPop1 <- actPop1[, c(3:20)]
counMAPE$MAPE[i] <- sum(abs((forePop1-actPop1)/actPop1))/(ncol(actPop1)*nrow(actPop1))*100
}
return(counMAPE)
}
GG <- calculateMAPE(forePop, actPop)
GG2 <- calculateMAPE(finalipf, actPop)
GG$MAPE>GG2$MAPE



calculateMALPE <- function(x, y){
counMAPE <- data.table(County = counlist, MALPE = NA)
for(i in 1:length(counlist)){
forePop1 <- x[grepl(counlist[i], County), ]
actPop1 <- y[grepl(counlist[i], County), ]
forePop1 <- forePop1[, c(3:20)]
actPop1 <- actPop1[, c(3:20)]
counMAPE$MALPE[i] <- sum(((forePop1-actPop1)/actPop1))/(ncol(actPop1)*nrow(actPop1))*100
}
return(counMAPE)
}
GG3 <- calculateMALPE(forePop, actPop)
GG4 <- calculateMALPE(finalipf, actPop)

noipf <- dplyr::left_join(x = GG, y = GG3, by = "County")
noipf$ipf <- "否"
yesipf <- dplyr::left_join(x = GG2, y = GG4, by = "County")
yesipf$ipf <- "是"
mytable <- rbind(noipf, yesipf)
mytable$method <- "二"
mytable <- mytable[, c(5, 4, 1:3)]
names(mytable) <- c("方法", "是否經IPF控制", "縣市", "MAPE", "MALPE")
xlsx::write.xlsx(mytable, "C:/Data/paper/data/result/MAPETABLE.xlsx", row.names = FALSE, showNA = FALSE, sheetName = "MAPE2", append = TRUE)


for(i in 98:107){
forePop2 <- forePop[year == i, ]
forePop2$year <- NULL
xlsx::write.xlsx(forePop2, "D:/college/大專生/data/result/預估人口.xlsx", row.names = FALSE, showNA = FALSE, sheetName = as.character(i), append = TRUE)
}

names(CCR_total) <- gsub("c", "CCR", names(CCR_total))
CCRQQ <- CCR_total[year == 71, ]
xlsx::write.xlsx(CCRQQ, "D:/college/大專生/data/result/CCR.xlsx", row.names = FALSE, showNA = FALSE)


load("D:/Data/map/County.RData")

nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) County@data[grepl(i, County@data$COUNTY), ]$COUNTY <- i

row.names(County) <- County$COUNTY_ID
county <- fortify(County)
names(GG)[1] <- "COUNTY"
GG <- dplyr::left_join(x = County@data, y = GG, by = "COUNTY")
GG$id <- GG$COUNTY_ID
county1 <- dplyr::left_join(x = county, y = GG, by = "id")

p1 <- ggplot() + coord_equal() + theme_void() + 
geom_polygon(data = county1, aes(x = long, y = lat, group = group, fill = MAPE)) + 
geom_path(data = county1, aes(x = long, y = lat, group = group), colour = "grey50") + 
scale_fill_gradient(low = "#ffecec", high = "#ae0000")

png("C:/Data/paper/data/result/MAPE_total.png", width = 720, height = 720)
p1
dev.off()

names(GG2)[1] <- "COUNTY"
GG2 <- dplyr::left_join(x = County@data, y = GG2, by = "COUNTY")
GG2$id <- GG2$COUNTY_ID
county2 <- dplyr::left_join(x = county, y = GG2, by = "id")

p2 <- ggplot() + coord_equal() + theme_void() + 
geom_polygon(data = county2, aes(x = long, y = lat, group = group, fill = MAPE)) + 
geom_path(data = county2, aes(x = long, y = lat, group = group), colour = "grey50") + 
scale_fill_gradient(low = "#ffecec", high = "#ae0000")

png("C:/Data/paper/data/result/MAPE_IPF.png", width = 720, height = 720)
p2
dev.off()


townpop <- finalipf[, c(1, 3:21)][, lapply(.SD, sum), by = .(County, year)][year %in% 103:103, ]
townpop <- rowSums(townpop[, 3:20])

townmape <- data.table()
for(i in 103:107){
  townmape <- rbind(townmape, calculateMAPE(finalipf[year == i, ], actPop[year == i, ]))
}
townmape$pop <- townpop
townmape$year <- rep(103:107, each = 20)

regmodel <- lm(data = townmape, formula = MAPE ~ log(pop) + year)
summary(regmodel)
plot(regmodel)

townmape <- townmape[-c(19, 39, 59), ]
townmape <- townmape[-c(76, 96), ]





County <- sf::st_read("C:/Data/paper/data/County/COUNTY_MOI_1070516.shp", stringsAsFactors = FALSE)
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) County$COUNTYNAME[grepl(i, County$COUNTYNAME)] <- i

names(GG)[1] <- "COUNTYNAME"
names(GG2) <- c("COUNTYNAME", "MAPE_IPF")
names(GG3)[1] <- "COUNTYNAME"
names(GG4) <- c("COUNTYNAME", "MALPE_IPF")
County <- dplyr::left_join(x = County, y = GG, by = "COUNTYNAME")
County <- dplyr::left_join(x = County, y = GG2, by = "COUNTYNAME")
County <- dplyr::left_join(x = County, y = GG3, by = "COUNTYNAME")
County <- dplyr::left_join(x = County, y = GG4, by = "COUNTYNAME")

p1 <- ggplot(data = County) + geom_sf(aes(fill = MAPE)) + 
  scale_fill_gradient(low = "#ffecec", high = "#ae0000") + 
  theme_void()
png("C:/Data/paper/data/result/MAPE_total_M2.png", width = 720, height = 720)
p1
dev.off()

p2 <- ggplot(data = County) + geom_sf(aes(fill = MAPE_IPF)) + 
  scale_fill_gradient(low = "#ffecec", high = "#ae0000") + 
  theme_void()
png("C:/Data/paper/data/result/MAPE_IPF_total_M2.png", width = 720, height = 720)
p2
dev.off()

p3 <- ggplot(data = County) + geom_sf(aes(fill = MALPE)) + 
  scale_fill_gradient2(low = "red", high = "blue", mid = "white") + 
  theme_void()
png("C:/Data/paper/data/result/MALPE_total_M2.png", width = 720, height = 720)
p3
dev.off()

p4 <- ggplot(data = County) + geom_sf(aes(fill = MALPE_IPF)) + 
  scale_fill_gradient2(low = "red", high = "blue", mid = "white") + 
  theme_void()
png("C:/Data/paper/data/result/MALPE_IPF_total_M2.png", width = 720, height = 720)
p4
dev.off()

GG
GG2
GG3
GG4




















