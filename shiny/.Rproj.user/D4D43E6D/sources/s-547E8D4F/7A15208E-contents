trainedData <- lapply(names(mappinglist), FUN = function(x){
  df <- mappinglist[[x]]
  if (x %in% c("Population")){
    if (x == "Population"){
      setDT(df)
      df <- df[order(COUNTYNAME, Sex, Year), ]
      Countynamelist <- unique(df$COUNTYNAME)
      Sexlist <- unique(df$Sex)
      trainedDf <- rbindlist(lapply(Countynamelist, FUN = function(y){
        sexDf <- data.table()
        for (i in Sexlist){
          trainingData <- df[COUNTYNAME == y& Sex == i, ]
          setDF(trainingData)
          resultslist <- data.frame(lapply(names(trainingData)[4:21], FUN = function(k){
            arimaModel <- auto.arima(trainingData[, k])
            results <- round(as.numeric(forecast(arimaModel, 10)$mean), 0)
            return(results)
          }))
          
          resDf <- data.table(Year = c((max(df$Year) + 1):(max(df$Year) + 10)), 
                              COUNTYNAME = rep(y, 10), 
                              Sex = rep(i, 10))
          resDf <- rbind(df[COUNTYNAME == y& Sex == i, ][, c(1:3, 22)], resDf)
          sexDf <- rbind(sexDf, resDf)
        }
        return(sexDf)
      }))
      df <- trainedDf
      
    }else {
      setDT(df)
      df <- df[order(COUNTYNAME, Year), ]
      Countynamelist <- unique(df$COUNTYNAME)
      trainedDf <- rbindlist(lapply(Countynamelist, FUN = function(y){
        arimaModel <-auto.arima(df[COUNTYNAME == y, ]$Total_pop)
        results <- as.numeric(forecast(arimaModel, 10)$mean)
        resDf <- data.table(Year = c((max(df$Year) + 1):(max(df$Year) + 10)), 
                            COUNTYNAME = rep(y, 10),
                            Total_pop = results)
        resDf <- rbind(df[COUNTYNAME == y, ][, c(1:3)], resDf)
        return(resDf)
      }))
      df <- trainedDf
    }
  }
  return(df)
})
return(trainedData)