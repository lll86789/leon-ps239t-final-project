shiny::runApp()
runApp()
shiny::runApp()
install.packages('rsconnect')
install.packages("rsconnect")
library(tidyverse)
library(data.table)
setwd("C:/Data/leon-ps239t-final-project/shiny")
##set variable name
nam <- c("County", "Sex", "Total", "c0", "c1to4", "c1", "c2", "c3", "c4", "c5to9",
"c10to14", "c15to19", "c20to24", "c25to29", "c30to34", "c35to39", "c40to44", "c45to49",
"c50to54", "c55to59", "c60to64", "c65to69", "c70to74", "c75to79", "c80to84", "c85to89",
"c90to94", "c95to99", "c100")
##make a county list
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = "105", startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop <- pop[Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
county_list <- pop[, c(1:2)]
county_list <- county_list[!grepl("新竹市|嘉義市|高雄縣|臺中縣|臺南縣", County), ]
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) county_list[grepl(i, County), ]$County <- substr(county_list[grepl(i, County), ]$County, 1, 2)
###read data function
readPop <- function(x){
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = as.character(x), startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop$County <- gsub("\\s", "", pop$County)
pop <- pop[, lapply(.SD, as.numeric), by = .(County, Sex)]
pop <- pop[, c(1:2, 4:5, 10:29)][Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
pop[, `:=`(c0to4 = c0+c1to4, c85 = c85to89 + c90to94 + c95to99 + c100, County = ifelse(grepl("臺北縣", County), "新北市", ifelse(grepl("桃園縣", County), "桃園市", County)))]
pop <- pop[, c(1:2, 25, 5:20, 26)]
nl <- c("臺中", "臺南", "高雄")
nl2 <- c("新竹", "嘉義")
for (i in nl){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
if (x >= 71){
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
}else{
pop <- pop[!grepl("新竹市|嘉義市", County), ]
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
}
}
pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
return(pop)
}
pop_all <- rbindlist(lapply(63:107, FUN = function(x){
df <- readPop(x)
df$Year <- rep(x + 1911, nrow(df))
df <- df[, c(21, 1:20)]
return(df)
}))
names(pop_all)[2] <- "COUNTYNAME"
pop_total <- pop_all[, c(1:2, 4:21)][, lapply(.SD, FUN = sum), by = .(Year, COUNTYNAME)]
pop_total$Sex <- "Total"
pop_total <- pop_total[, c(1:2, 21, 3:20)]
pop_all <- rbind(pop_all, pop_total)
pop_all$Total_pop <- rowSums(pop_all[, 4:21])
pop_all$Sex <- ifelse(pop_all$Sex == "男", "Male", ifelse(pop_all$Sex == "女", "Female", pop_all$Sex))
write.csv(pop_all, "./data/result/Total_population.csv", row.names = FALSE)
###
unemploymentrate <- fread("./data/unemploymentrate.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
unemploymentrate <- unemploymentrate[1:20, ]
unemploymentrate$V1 <- NULL
unemploymentrate$V23 <- gsub("\\W", "", unemploymentrate$V23)
unemploymentrate$V23 <- as.numeric(unemploymentrate$V23)
unemploymentrate$V24 <- gsub("\\W", "", unemploymentrate$V24)
unemploymentrate$V24 <- as.numeric(unemploymentrate$V24)
names(unemploymentrate) <- c("Year", var_name)
setDF(unemploymentrate)
unemploymentrate <- melt(unemploymentrate, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
unemploymentrate$COUNTYNAME <- as.character(unemploymentrate$COUNTYNAME)
for(i in nl) unemploymentrate$COUNTYNAME[grepl(i, unemploymentrate$COUNTYNAME)] <- i
write.csv(unemploymentrate, "./data/result/unemploymentrate.csv", row.names = FALSE)
###
DI <- fread("./data/disposable_income.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
DI <- DI[1:20, ]
DI$V1 <- NULL
DI$V23 <- as.numeric(DI$V23)
DI$V24 <- gsub("\\W", "", DI$V24)
DI$V24 <- as.numeric(DI$V24)
DI <- cbind(DI[, 1], as.data.frame(apply(DI[, 2:23], 2, FUN = function(x) x/30)))
names(DI) <- c("Year", var_name)
setDF(DI)
DI <- melt(DI, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
DI$COUNTYNAME <- as.character(DI$COUNTYNAME)
for(i in nl) DI$COUNTYNAME[grepl(i, DI$COUNTYNAME)] <- i
write.csv(DI, "./data/result/disposable_income.csv", row.names = FALSE)
###
unemploymentrate <- fread("./data/unemploymentrate.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
unemploymentrate
library(tidyverse)
library(data.table)
Sys.setlocale(category = "LC_ALL", locale = "cht")
setwd("C:/Data/leon-ps239t-final-project/shiny")
##set variable name
nam <- c("County", "Sex", "Total", "c0", "c1to4", "c1", "c2", "c3", "c4", "c5to9",
"c10to14", "c15to19", "c20to24", "c25to29", "c30to34", "c35to39", "c40to44", "c45to49",
"c50to54", "c55to59", "c60to64", "c65to69", "c70to74", "c75to79", "c80to84", "c85to89",
"c90to94", "c95to99", "c100")
##make a county list
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = "105", startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop <- pop[Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
county_list <- pop[, c(1:2)]
county_list <- county_list[!grepl("新竹市|嘉義市|高雄縣|臺中縣|臺南縣", County), ]
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) county_list[grepl(i, County), ]$County <- substr(county_list[grepl(i, County), ]$County, 1, 2)
###read data function
readPop <- function(x){
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = as.character(x), startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop$County <- gsub("\\s", "", pop$County)
pop <- pop[, lapply(.SD, as.numeric), by = .(County, Sex)]
pop <- pop[, c(1:2, 4:5, 10:29)][Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
pop[, `:=`(c0to4 = c0+c1to4, c85 = c85to89 + c90to94 + c95to99 + c100, County = ifelse(grepl("臺北縣", County), "新北市", ifelse(grepl("桃園縣", County), "桃園市", County)))]
pop <- pop[, c(1:2, 25, 5:20, 26)]
nl <- c("臺中", "臺南", "高雄")
nl2 <- c("新竹", "嘉義")
for (i in nl){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
if (x >= 71){
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
}else{
pop <- pop[!grepl("新竹市|嘉義市", County), ]
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
}
}
pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
return(pop)
}
pop_all <- rbindlist(lapply(63:107, FUN = function(x){
df <- readPop(x)
df$Year <- rep(x + 1911, nrow(df))
df <- df[, c(21, 1:20)]
return(df)
}))
names(pop_all)[2] <- "COUNTYNAME"
pop_total <- pop_all[, c(1:2, 4:21)][, lapply(.SD, FUN = sum), by = .(Year, COUNTYNAME)]
pop_total$Sex <- "Total"
pop_total <- pop_total[, c(1:2, 21, 3:20)]
pop_all <- rbind(pop_all, pop_total)
pop_all$Total_pop <- rowSums(pop_all[, 4:21])
pop_all$Sex <- ifelse(pop_all$Sex == "男", "Male", ifelse(pop_all$Sex == "女", "Female", pop_all$Sex))
write.csv(pop_all, "./data/result/Total_population.csv", row.names = FALSE)
###
unemploymentrate <- fread("./data/unemploymentrate.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
unemploymentrate <- unemploymentrate[1:20, ]
unemploymentrate$V1 <- NULL
unemploymentrate$V23 <- gsub("\\W", "", unemploymentrate$V23)
unemploymentrate$V23 <- as.numeric(unemploymentrate$V23)
unemploymentrate$V24 <- gsub("\\W", "", unemploymentrate$V24)
unemploymentrate$V24 <- as.numeric(unemploymentrate$V24)
names(unemploymentrate) <- c("Year", var_name)
setDF(unemploymentrate)
unemploymentrate <- melt(unemploymentrate, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
unemploymentrate$COUNTYNAME <- as.character(unemploymentrate$COUNTYNAME)
for(i in nl) unemploymentrate$COUNTYNAME[grepl(i, unemploymentrate$COUNTYNAME)] <- i
write.csv(unemploymentrate, "./data/result/unemploymentrate.csv", row.names = FALSE)
###
DI <- fread("./data/disposable_income.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
DI <- DI[1:20, ]
DI$V1 <- NULL
DI$V23 <- as.numeric(DI$V23)
DI$V24 <- gsub("\\W", "", DI$V24)
DI$V24 <- as.numeric(DI$V24)
DI <- cbind(DI[, 1], as.data.frame(apply(DI[, 2:23], 2, FUN = function(x) x/30)))
names(DI) <- c("Year", var_name)
setDF(DI)
DI <- melt(DI, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
DI$COUNTYNAME <- as.character(DI$COUNTYNAME)
for(i in nl) DI$COUNTYNAME[grepl(i, DI$COUNTYNAME)] <- i
write.csv(DI, "./data/result/disposable_income.csv", row.names = FALSE)
library(tidyverse)
library(data.table)
Sys.setlocale(category = "LC_ALL", locale = "cht")
setwd("C:/Data/leon-ps239t-final-project/shiny")
##set variable name
nam <- c("County", "Sex", "Total", "c0", "c1to4", "c1", "c2", "c3", "c4", "c5to9",
"c10to14", "c15to19", "c20to24", "c25to29", "c30to34", "c35to39", "c40to44", "c45to49",
"c50to54", "c55to59", "c60to64", "c65to69", "c70to74", "c75to79", "c80to84", "c85to89",
"c90to94", "c95to99", "c100")
##make a county list
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = "105", startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop <- pop[Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
county_list <- pop[, c(1:2)]
county_list <- county_list[!grepl("新竹市|嘉義市|高雄縣|臺中縣|臺南縣", County), ]
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) county_list[grepl(i, County), ]$County <- substr(county_list[grepl(i, County), ]$County, 1, 2)
###read data function
readPop <- function(x){
pop <- openxlsx::read.xlsx("./data/COUNTY.xlsx", sheet = as.character(x), startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop$County <- gsub("\\s", "", pop$County)
pop <- pop[, lapply(.SD, as.numeric), by = .(County, Sex)]
pop <- pop[, c(1:2, 4:5, 10:29)][Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
pop[, `:=`(c0to4 = c0+c1to4, c85 = c85to89 + c90to94 + c95to99 + c100, County = ifelse(grepl("臺北縣", County), "新北市", ifelse(grepl("桃園縣", County), "桃園市", County)))]
pop <- pop[, c(1:2, 25, 5:20, 26)]
nl <- c("臺中", "臺南", "高雄")
nl2 <- c("新竹", "嘉義")
for (i in nl){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
if (x >= 71){
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
}else{
pop <- pop[!grepl("新竹市|嘉義市", County), ]
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
}
}
pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
return(pop)
}
pop_all <- rbindlist(lapply(63:107, FUN = function(x){
df <- readPop(x)
df$Year <- rep(x + 1911, nrow(df))
df <- df[, c(21, 1:20)]
return(df)
}))
names(pop_all)[2] <- "COUNTYNAME"
pop_total <- pop_all[, c(1:2, 4:21)][, lapply(.SD, FUN = sum), by = .(Year, COUNTYNAME)]
pop_total$Sex <- "Total"
pop_total <- pop_total[, c(1:2, 21, 3:20)]
pop_all <- rbind(pop_all, pop_total)
pop_all$Total_pop <- rowSums(pop_all[, 4:21])
pop_all$Sex <- ifelse(pop_all$Sex == "男", "Male", ifelse(pop_all$Sex == "女", "Female", pop_all$Sex))
write.csv(pop_all, "./data/result/Total_population.csv", row.names = FALSE)
###
var_name <- fread("./data/unemploymentrate.csv", stringsAsFactors = FALSE, skip = 2, fill = TRUE)
var_name <- gsub("\\W", "", names(var_name)[3:24])
###
unemploymentrate <- fread("./data/unemploymentrate.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
unemploymentrate <- unemploymentrate[1:20, ]
unemploymentrate$V1 <- NULL
unemploymentrate$V23 <- gsub("\\W", "", unemploymentrate$V23)
unemploymentrate$V23 <- as.numeric(unemploymentrate$V23)
unemploymentrate$V24 <- gsub("\\W", "", unemploymentrate$V24)
unemploymentrate$V24 <- as.numeric(unemploymentrate$V24)
names(unemploymentrate) <- c("Year", var_name)
setDF(unemploymentrate)
unemploymentrate <- melt(unemploymentrate, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
unemploymentrate$COUNTYNAME <- as.character(unemploymentrate$COUNTYNAME)
for(i in nl) unemploymentrate$COUNTYNAME[grepl(i, unemploymentrate$COUNTYNAME)] <- i
write.csv(unemploymentrate, "./data/result/unemploymentrate.csv", row.names = FALSE)
###
DI <- fread("./data/disposable_income.csv", stringsAsFactors = FALSE, skip = 4, fill = TRUE)
DI <- DI[1:20, ]
DI$V1 <- NULL
DI$V23 <- as.numeric(DI$V23)
DI$V24 <- gsub("\\W", "", DI$V24)
DI$V24 <- as.numeric(DI$V24)
DI <- cbind(DI[, 1], as.data.frame(apply(DI[, 2:23], 2, FUN = function(x) x/30)))
names(DI) <- c("Year", var_name)
setDF(DI)
DI <- melt(DI, id = 1, variable.name = "COUNTYNAME", value.name = "Total_pop")
DI$COUNTYNAME <- as.character(DI$COUNTYNAME)
for(i in nl) DI$COUNTYNAME[grepl(i, DI$COUNTYNAME)] <- i
write.csv(DI, "./data/result/disposable_income.csv", row.names = FALSE)
shiny::runApp()
runApp()
View(formalpop)
mappinglist <- list(pop_all, unemploymentrate, DI)
str(mappinglist)
names(mappinglist)
names(mappinglist) <- c("Population",
"Unemployment Rate",
"Disposable Income")
str(mappinglist)
mappinglist[["Population"]]
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(data.table)
library(forecast)
library(parallel)
library(ggplot2)
library(maptools)
library(rgdal)
library(geosphere)
library(rgeos)
library(sf)
Sys.setlocale(category = "LC_ALL", locale = "cht")
##變項名
nam <- c("County", "Sex", "Total", "c0", "c1to4", "c1", "c2", "c3", "c4", "c5to9",
"c10to14", "c15to19", "c20to24", "c25to29", "c30to34", "c35to39", "c40to44", "c45to49",
"c50to54", "c55to59", "c60to64", "c65to69", "c70to74", "c75to79", "c80to84", "c85to89",
"c90to94", "c95to99", "c100")
##以105年的縣市作為縣市List
pop <- openxlsx::read.xlsx("C:/Data/paper/data/COUNTY.xlsx", sheet = "105", startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop <- pop[Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
county_list <- pop[, c(1:2)]
county_list <- county_list[!grepl("新竹市|嘉義市|高雄縣|臺中縣|臺南縣", County), ]
nl <- c("臺中", "臺南", "高雄", "新竹", "嘉義")
for(i in nl) county_list[grepl(i, County), ]$County <- substr(county_list[grepl(i, County), ]$County, 1, 2)
##
###讀取資料function
readPop <- function(x){
pop <- openxlsx::read.xlsx("C:/Data/paper/data/COUNTY.xlsx", sheet = as.character(x), startRow = 4)
pop <- pop[, c(1:29)]
setDT(pop)
names(pop) <- nam
pop <- pop[!is.na(Total), ]
pop$County <- rep(pop$County[!is.na(pop$County)], each = 3)
pop$County <- gsub("\\s", "", pop$County)
pop <- pop[, lapply(.SD, as.numeric), by = .(County, Sex)]
pop <- pop[, c(1:2, 4:5, 10:29)][Sex != "計"&!County %in% c("福建省", "總計", "臺灣地區", "臺灣省"), ]
pop[, `:=`(c0to4 = c0+c1to4, c85 = c85to89 + c90to94 + c95to99 + c100, County = ifelse(grepl("臺北縣", County), "新北市", ifelse(grepl("桃園縣", County), "桃園市", County)))]
pop <- pop[, c(1:2, 25, 5:20, 26)]
nl <- c("臺中", "臺南", "高雄")
nl2 <- c("新竹", "嘉義")
for (i in nl){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
if (x >= 71){
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
pop <- pop[, lapply(.SD, sum), by = .(County, Sex)]
}
}else{
pop <- pop[!grepl("新竹市|嘉義市", County), ]
for (i in nl2){
pop[grepl(i, County), ]$County <- substr(pop[grepl(i, County), ]$County, 1, 2)
}
}
pop <- dplyr::left_join(x = county_list, y = pop, by = c("County", "Sex"))
return(pop)
}
##計算現有的CCR，使用63-95年資料
calculateCCRTotal <- function(from, to){
CCR_total <- data.table()
for(k in from:to){
pop <- readPop(k)
setDF(pop)
pop2 <- readPop(k+5)
setDF(pop2)
CCR <- data.table(County = pop$County, Sex = pop$Sex)
for(i in 3:18){
ccr <- pop2[, c(i+1)]/pop[, c(i)]
CCR <- cbind(CCR, ccr)
names(CCR)[i] <- names(pop)[i]
}
CCR$c80 <- pop2[, c(20)]/(pop[, c(19)]+pop[, c(20)])
fer <- pop2
setDT(fer)
fer <- fer[Sex == "女", ]
fer <- fer[, .(FP = sum(c15to19, c20to24, c25to29, c30to34, c35to39, c40to44)), by = .(County)]
CCR$CWR <- pop2[, c(3)]/rep(fer$FP, each = 2)
CCR$year <- rep(k, nrow(CCR))
CCR_total <- rbind(CCR_total, CCR)
}
return(CCR_total)
}
CCR_total <- calculateCCRTotal(63, 92)
dd <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]
dd <- melt(data = dd, id = c("year", "Sex"))
dd <- dd[Sex == "女", ]
lab <- tapply(dd$value, dd$variable, last)
p1 <- ggplot() + geom_line(data = dd, aes(x = year, y = value,
group = variable, color = variable)) +
geom_text(aes(x = 93, y = lab, label = names(lab))) + theme_minimal()
png("C:/Data/paper/data/result/TimeSeriesOfCCR_Female.png", width = 720, height = 720)
p1
dev.off()
dd <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]
dd <- melt(data = dd, id = c("year", "Sex"))
dd <- dd[Sex == "男", ]
lab <- tapply(dd$value, dd$variable, last)
p2 <- ggplot() + geom_line(data = dd, aes(x = year, y = value,
group = variable, color = variable)) +
geom_text(aes(x = 93, y = lab, label = names(lab))) + theme_minimal()
png("C:/Data/paper/data/result/TimeSeriesOfCCR_Male.png", width = 720, height = 720)
p2
dev.off()
CCR_year_sex <- CCR_total[, 2:21][, lapply(.SD, mean), by = .(year, Sex)]
pop6392 <- data.table()
for (i in 63:92){
df <- readPop(i)
df$year <- rep(i, nrow(df))
pop6392 <- rbind(pop6392, df)
}
pop6392_1 <- pop6392[, 2:21][, lapply(.SD, sum), by = .(year, Sex)]
pop6392_1$c80to84 <- pop6392_1$c80to84 + pop6392_1$c85
pop6392_1$c85 <- NULL
pop6392_1$CWR <- rowSums(pop6392_1[, 6:11])
pop6392_2 <- data.table()
for (i in 63:92){
df <- county_list
df$year <- rep(i, nrow(df))
pop6392_2 <- rbind(pop6392_2, df)
}
pop6392_4 <- pop6392_1
pop6392_1 <- dplyr::left_join(x = pop6392_2, y = pop6392_1, by = c("year", "Sex"))
setDT(pop6392_1)
pop6392_2 <- pop6392
pop6392_2$c80to84 <- pop6392_2$c80to84 + pop6392_2$c85
pop6392_2$c85 <- NULL
pop6392_2$CWR <- rowSums(pop6392_2[, 6:11])
pop6392_2$year <- NULL
pop6392_3 <- pop6392_2[, 3:20]/pop6392_1[, 4:21]
CCR_year_sex <- cbind(CCR_total[, c(2, 21)], CCR_total[, 3:20]*pop6392_3)
CCR_year_sex <- CCR_year_sex[, lapply(.SD, sum), by = .(year, Sex)]
kk <- cbind(pop6392_4[, 3:6]/rowSums(pop6392_4[, 3:6]),
pop6392_4[, 7:14]/rowSums(pop6392_4[, 7:14]),
pop6392_4[, 15:17]/rowSums(pop6392_4[, 15:17]),
pop6392_4[, 18:19]/rowSums(pop6392_4[, 18:19]))
CCR_year_sex <- cbind(CCR_year_sex[, 1:2], CCR_year_sex[, 3:19]*kk, CCR_year_sex[, c(20)])
CCR_year_sex$Young <- rowSums(CCR_year_sex[, 3:6])
CCR_year_sex$Adult <- rowSums(CCR_year_sex[, 7:14])
CCR_year_sex$Old <- rowSums(CCR_year_sex[, 15:17])
CCR_year_sex$eOld <- rowSums(CCR_year_sex[, 18:19])
CCR_year_sex <- CCR_year_sex[, c(1:2, 20:24)]
####predict CCR
predCCR <- data.table()
sexlist <- unique(county_list$Sex)
counlist <- unique(county_list$County)
y=1
sam <- CCR_year_sex[Sex == sexlist[y], ]
sam
k=3
setDF(sam)
pretime <- data.table(Sex = rep(sam$Sex[1], 10))
sam[, c(k)]
model <- auto.arima(sam[, c(k)])
model
as.numeric(forecast(model,10)$mean)
runApp()
runApp()
runApp()
runApp()
c(list(1), list(2))
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
